
C:\terraform-projects\yandex-cloud

#1. Инициализация Terraform
terraform init
    Что происходит:
        Terraform проверяет конфигурацию.
        Скачивает необходимые провайдеры (например, yandex-cloud).
        Инициализирует рабочую директорию (создаёт .terraform).

#2. Проверка конфигурации
terraform validate
    Что происходит:
        Terraform проверяет файлы на соответствие синтаксису HCL.
        Если есть ошибки, они будут показаны в терминале.

#3. Просмотр плана изменений
terraform plan
    Что происходит:
        Terraform анализирует текущее состояние инфраструктуры (если оно есть) и сравнивает его с желаемым состоянием из ваших конфигурационных файлов.
        Выводит список ресурсов, которые будут созданы, изменены или удалены.

#4. Применение изменений
terraform apply
    Что происходит:
        Terraform снова выводит план изменений.
        Запрашивает подтверждение (yes/no).
terraform apply -auto-approve
        Если вы хотите автоматически подтвердить, добавьте флаг -auto-approve

#5. Проверка состояния
terraform show
    Что происходит:
        Показывает текущее состояние всех ресурсов, управляемых Terraform.

#6. Удаление инфраструктуры (опционально)
terraform destroy
    Что происходит:
        Terraform анализирует текущее состояние и предлагает удалить все управляемые ресурсы.
        Запрашивает подтверждение (yes/no).
terraform destroy -auto-approve
        Для автоматического подтверждения используйте флаг -auto-approve

#7. Регулярно проверяйте состояние :
        terraform state list

Рекомендуемый порядок команд:
    terraform init
    terraform validate
    terraform plan
    terraform apply
    (Опционально) terraform destroy


Дополнительные советы:
    Рабочие директории :
        Убедитесь, что вы находитесь в той же директории, где находятся ваши .tf файлы.
        Все файлы с расширением .tf в директории автоматически обрабатываются Terraform.
    Состояние Terraform :
        Terraform хранит состояние инфраструктуры в файле terraform.tfstate.
        Не удаляйте этот файл, так как он содержит информацию о текущем состоянии ресурсов.
    Бэкенд для состояния :
        Для командной работы или более надёжного хранения состояния рекомендуется настроить бэкенд  (например, S3 или Yandex Object Storage).
    Логи и отладка :
        Если возникают ошибки, используйте флаг -debug для получения подробной информации:
        terraform apply -debug

для букета
terraform init -backend-config=backend-config.tfvars
terraform init -backend-config="backend-config.tfvars"